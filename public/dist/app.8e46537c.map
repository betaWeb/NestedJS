{"version":3,"sources":["../src/Node.js","../src/Nested.js","js/app.js"],"names":["PRIVATE_PROPERTIES","Node","node","tree_instance","_properties","_mapProperties","_tree_instance","key","undefined","defaultValue","value","getProperty","getTree","options","properties","node_id","parent_id","prev_id","next_id","children_key","instance","getPreviousNodes","getPreviousNode","getNextNodes","getNextNode","getParentNode","getSiblingsNodes","getBreadcrumb","reverse","hasChildNodes","children","childNodes","length","index","Boolean","getParentId","getPreviousId","getNextId","property_name","hasOwnProperty","includes","module","exports","require","DEFAULT_OPTIONS","node_id_prefix","Nested","data","Object","assign","buildTree","currentNode","id","getId","i","retrieveNode","nodes","hasProperty","push","concat","retrieveNodesBy","constructor","String","previousNodes","previousNode","nextNodes","nextNode","breadcrumb","parentid","count","tree","reduce","acc","setProperty","Math","floor","random","hasPreviousNode","hasNextNode","type","name","creation_date","last_modification_date","extension","iconskeymap","$breadcrumb","document","getElementById","$tree","$mainframeList","$mainframeDetails","buildList","root","$list","createElement","classList","add","forEach","item","$item","$icon","$title","textContent","addEventListener","$el","e","target","parentNode","nextSibling","toggle","Array","prototype","call","querySelectorAll","element","remove","innerHTML","span","appendChild","el","icon","iconName","childnode","test","n","__parentid","dataset"],"mappings":"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","file":"app.8e46537c.map","sourceRoot":"..","sourcesContent":["const PRIVATE_PROPERTIES = ['__nodeid', '__parentid', '__nextid', '__previd', '__tree']\n\nclass Node {\n\n    /**\n     * @param {Object} node\n     */\n    constructor(node = {}, tree_instance = null) {\n        this._properties = this._mapProperties(node)\n        this._tree_instance = tree_instance\n    }\n\n    /**\n     * Return node properties\n     * @returns {Object}\n     */\n    get properties() {\n        return this._properties\n    }\n\n    /**\n     * Check if node property exists\n     * @param {String} key\n     * @returns {boolean}\n     */\n    hasProperty(key) {\n        return this._properties[key] !== undefined\n    }\n\n    /**\n     * Returns node property if exists, defaultValue otherwise\n     * @param {String} key\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n    getProperty(key, defaultValue = null) {\n        return this._properties[key] || defaultValue\n    }\n\n    /**\n     * Set node property\n     * @param {String} key\n     * @param {*} value\n     */\n    setProperty(key, value) {\n        this._properties[key] = value\n    }\n\n    /**\n     * Returns node unique id\n     * @returns {String}\n     */\n    getId() {\n        return this.getProperty(this.getTree().options.properties.node_id)\n    }\n\n    /**\n     * Returns node parent unique id\n     * @returns {String|null}\n     */\n    getParentId() {\n        return this.getProperty(this.getTree().options.properties.parent_id)\n    }\n\n    /**\n     * Returns previous node unique id\n     * @returns {String|null}\n     */\n    getPreviousId() {\n        return this.getProperty(this.getTree().options.properties.prev_id)\n    }\n\n    /**\n     * Returns next node unique id\n     * @returns {String|null}\n     */\n    getNextId() {\n        return this.getProperty(this.getTree().options.properties.next_id)\n    }\n\n    /**\n     * Returns an array of child nodes\n     * @returns {Node[]}\n     */\n    childNodes() {\n        return this.getProperty(this.getTree().options.properties.children_key, [])\n    }\n\n    /**\n     * Returns an array of previous nodes if exists, null otherwise\n     * @returns {Node[]|null}\n     */\n    previousNodes() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getPreviousNodes(this) : null\n    }\n\n    /**\n     * Returns previous node if exists, null otherwise\n     * @returns {Node|null}\n     */\n    previousNode() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getPreviousNode(this) : null\n    }\n\n    /**\n     * Returns an array of next nodes if exists, null otherwise\n     * @returns {Node[]|null}\n     */\n    nextNodes() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getNextNodes(this) : null\n    }\n\n    /**\n     * Returns next node if exists, null otherwise\n     * @returns {Node|null}\n     */\n    nextNode() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getNextNode(this) : null\n    }\n\n    /**\n     * Returns parent node if exists, null otherwise\n     * @returns {Node|null}\n     */\n    parentNode() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getParentNode(this) : null\n    }\n\n    /**\n     * Returns an array of siblings nodes if exists, null otherwise\n     * @returns {Node[]|null}\n     */\n    siblingsNodes() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getSiblingsNodes(this) : null\n    }\n\n    /**\n     * Returns Nested instance\n     * @returns {Nested|null}\n     */\n    getTree() {\n        return this._tree_instance || null\n    }\n\n    /**\n     * Returns current node breadcrumb\n     * @returns {Node[]|Array}\n     */\n    breadcrumb() {\n        let instance = this.getTree()\n        if (instance !== null)\n            return instance.getBreadcrumb(this).reverse()\n        return []\n    }\n\n    /**\n     * Returns node first child if exists, null otherwise\n     * @returns {Node|null}\n     */\n    firstChild() {\n        if (!this.hasChildNodes()) return null\n        const children = this.childNodes()\n        return children && children.length ? children[0] : null\n    }\n\n    /**\n     * Returns node last child if exists, null otherwise\n     * @returns {Node|null}\n     */\n    lastChild() {\n        if (!this.hasChildNodes()) return null\n        const children = this.childNodes()\n        return children && children.length ? children[children.length - 1] : null\n    }\n\n    /**\n     * Returns node child by index if exists, null otherwise\n     * @returns {Node|null}\n     */\n    nthChild(index) {\n        if (!this.hasChildNodes()) return null\n        const children = this.childNodes()\n        return children && children.length ? children[index] : null\n    }\n\n    /**\n     * Count node childs\n     * @returns {Number}\n     */\n    countChildren() {\n        if (!this.hasChildNodes()) return 0\n        return this.childNodes().length\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasChildNodes() {\n        const children = this.childNodes()\n        return Boolean(children !== undefined && children !== null && children.length > 0)\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasParentNode() {\n        return Boolean(this.getParentId() !== null)\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasPreviousNode() {\n        return Boolean(this.getPreviousId() !== null)\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasNextNode() {\n        return Boolean(this.getNextId() !== null)\n    }\n\n    /**\n     * Map node properties\n     * @param {Object} properties\n     * @returns {Object}\n     * @private\n     */\n    _mapProperties(properties) {\n        for (let property_name in properties) {\n            if (properties.hasOwnProperty(property_name)) {\n                if (!this[property_name] && !PRIVATE_PROPERTIES.includes(property_name))\n                    this[property_name] = properties[property_name]\n            }\n        }\n        return properties\n    }\n\n}\n\nmodule.exports = Node","const Node = require('./Node')\nconst DEFAULT_OPTIONS = {\n    properties: {\n        node_id: '__nodeid',\n        node_id_prefix: 'node-',\n        parent_id: '__parentid',\n        prev_id: '__previd',\n        next_id: '__nextid',\n        children_key: 'children'\n    }\n}\n\nclass Nested {\n\n    /**\n     * @param {Array} data\n     * @param {Object} options\n     */\n    constructor(data = [], options = {}) {\n        this.options = Object.assign({}, DEFAULT_OPTIONS, options)\n        this.data = this.buildTree(data)\n        this.currentNode = null\n    }\n\n    /**\n     * Retrieve node by id\n     * @param {String} id\n     * @param {Array|null} data\n     * @returns {Node|null}\n     */\n    retrieveNode(id, data = null) {\n        if (this.currentNode !== null && this.currentNode.getId() === id)\n            return this.currentNode\n\n        if (data === null) {\n            data = this.data\n            this.currentNode = null\n        }\n\n        let node = null\n        for (let i = 0; i < data.length; i++) {\n            node = data[i]\n            if (node.getId() === id) {\n                this.currentNode = node\n                break\n            }\n            else if (node.hasChildNodes()) {\n                node = this.retrieveNode(id, node.childNodes())\n            } else node = null\n        }\n        return this.currentNode\n    }\n\n    /**\n     * Retrieve nodes by key-value couple\n     * @param {String} key\n     * @param {*|null|undefined} value\n     * @param {Array} data\n     * @returns {Node[]|[]}\n     */\n    retrieveNodesBy(key, value, data = null) {\n        data = data || this.data\n        let nodes = []\n        for (let i = 0; i < data.length; i++) {\n            let node = data[i]\n            if (node.hasProperty(key) && node.getProperty(key) === value) nodes.push(node)\n            if (node.hasChildNodes())\n                nodes = nodes.concat(this.retrieveNodesBy(key, value, node.childNodes()))\n        }\n        return nodes\n    }\n\n    /**\n     * Retrieve node parent\n     * @param {Node|String} node\n     * @returns {Node|null}\n     */\n    getParentNode(node) {\n        const id = node.constructor === Node ? node.getParentId() : node\n        return this.retrieveNode(id)\n    }\n\n    /**\n     * Retrieve node siblings\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getSiblingsNodes(node) {\n        return [].concat(this.getPreviousNodes(node), this.getNextNodes(node))\n    }\n\n    /**\n     * Retrieve previous nodes by id\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getPreviousNodes(node) {\n        if (node.constructor === String) node = this.retrieveNode(node)\n        let previousNodes = []\n        if (node !== null && node.getPreviousId() !== null) {\n            previousNodes.push(node.previousNode())\n            previousNodes = previousNodes.concat(this.getPreviousNodes(node.getPreviousId()))\n        }\n        return previousNodes\n    }\n\n    /**\n     * Retrieve previous node\n     * @param {Node|String} node\n     * @returns {Node}\n     */\n    getPreviousNode(node) {\n        const id = node.constructor === Node ? node.getPreviousId() : node\n        return id !== null ? this.retrieveNode(id) : null\n    }\n\n    /**\n     * Retrieve node next nodes\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getNextNodes(node) {\n        if (node.constructor === String) node = this.retrieveNode(node)\n        let nextNodes = []\n        if (node !== null && node.getNextId() !== null) {\n            nextNodes.push(node.nextNode())\n            nextNodes = nextNodes.concat(this.getNextNodes(node.getNextId()))\n        }\n        return nextNodes\n    }\n\n    /**\n     * Retrieve next node\n     * @param {Node|String} node\n     * @returns {Node}\n     */\n    getNextNode(node) {\n        const id = node.constructor === Node ? node.getNextId() : node\n        return id !== null ? this.retrieveNode(id) : null\n    }\n\n    /**\n     * Retrieve node breadcrumb\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getBreadcrumb(node) {\n        if (node.constructor === String) node = this.retrieveNode(node)\n        let breadcrumb = []\n        breadcrumb.push(node)\n        if (node.getParentId() !== null)\n            breadcrumb = breadcrumb.concat(this.getBreadcrumb(node.getParentId()))\n        return breadcrumb\n    }\n\n    /**\n     * @param {Array} data\n     * @param {String|null} parentid\n     * @returns {Node[]}\n     */\n    buildTree(data = [], parentid = null) {\n        if (!this.count) this.count = 0\n        let tree = data.reduce((acc, node) => {\n            this.count += 1\n            if (node.constructor !== Node)\n                node = new Node(node, this)\n            node.setProperty(this.options.properties.node_id, `${this.options.properties.node_id_prefix}${this.count * Math.floor((Math.random() * 10000) + 1)}`)\n            node.setProperty(this.options.properties.parent_id, parentid)\n            if (node.hasChildNodes())\n                node.setProperty(this.options.properties.children_key, this.buildTree(node.childNodes(), node.getId()))\n            acc.push(node)\n            return acc\n        }, [])\n        for (let i = 0; i < tree.length; i++) {\n            let hasPreviousNode = tree[i - 1] !== undefined && tree[i - 1].constructor === Node\n            let hasNextNode = tree[i + 1] !== undefined && tree[i + 1].constructor === Node\n            tree[i].setProperty(this.options.properties.prev_id, hasPreviousNode ? tree[i - 1].getId() : null)\n            tree[i].setProperty(this.options.properties.next_id, hasNextNode ? tree[i + 1].getId() : null)\n        }\n        return tree\n    }\n\n}\n\nmodule.exports = Nested","import Nested from '../../src/Nested'\n\nconst data = [\n    {\n        type: 'folder',\n        name: 'Ma musique',\n        creation_date: '2018-05-04 14:53:26',\n        last_modification_date: '2018-05-04 14:53:26',\n        children: [\n            {\n                type: 'file',\n                name: 'my song.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:12',\n                last_modification_date: '2018-05-04 14:55:12',\n            }, {\n                type: 'file',\n                name: 'my song_2.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:16',\n                last_modification_date: '2018-05-04 14:55:16',\n            }, {\n                type: 'file',\n                name: 'my song_3.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:24',\n                last_modification_date: '2018-05-04 14:55:24',\n            }, {\n                type: 'file',\n                name: 'my song_4.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:58',\n                last_modification_date: '2018-05-04 14:55:58',\n            }, {\n                type: 'folder',\n                name: 'favourites',\n                creation_date: '2018-05-04 14:57:01',\n                last_modification_date: '2018-05-04 14:57:01',\n                children: [\n                    {\n                        type: 'file',\n                        name: 'my favourite song.mp3',\n                        extension: 'mp3',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }, {\n                        type: 'file',\n                        name: 'my favourite song_2.mp3',\n                        extension: 'mp3',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }\n                ]\n            }\n        ]\n    }, {\n        type: 'folder',\n        name: 'Mes vidéos',\n        creation_date: '2018-05-04 14:53:26',\n        last_modification_date: '2018-05-04 14:53:26',\n        children: [\n            {\n                type: 'file',\n                name: 'my video.mp4',\n                extension: 'mp4',\n                creation_date: '2018-05-04 14:55:12',\n                last_modification_date: '2018-05-04 14:55:12',\n            }, {\n                type: 'folder',\n                name: 'favourites',\n                creation_date: '2018-05-04 14:57:01',\n                last_modification_date: '2018-05-04 14:57:01',\n                children: [\n                    {\n                        type: 'file',\n                        name: 'my favourite video.mp4',\n                        extension: 'mp4',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nconst iconskeymap = {\n    'video': /\\.?(mp4|webm|ogg)/i,\n    'pdf': /\\.?(pdf)/i,\n    'image': /\\.?(jpe?g|png|tiff|svg|bmp)/i,\n    'code': /\\.?(jsx?|php|css|html|scss|less|rb|py|c|cs|sh)/i,\n    'audio': /\\.?(mp3|wav|ogg)/i,\n    'archive': /\\.?(zip|rar|7z|tar(\\.gz)?)/i\n\n}\n\nconst tree = new Nested(data)\n\nlet $breadcrumb = document.getElementById('breadcrumb')\nlet $tree = document.getElementById('tree')\nlet $mainframeList = document.getElementById('mainframe-list')\nlet $mainframeDetails = document.getElementById('mainframe-details')\n\nlet buildList = (data, root = false) => {\n    let $list = document.createElement('ul')\n    $list.classList.add('list')\n    if (root) $list.classList.add('tree-root')\n    data.forEach(item => {\n        if (item.type === 'folder') {\n            let $item = document.createElement('li')\n            let $icon = document.createElement('span')\n            let $title = document.createElement('a')\n            $icon.classList.add('tree-icon')\n            $title.textContent = item.name\n            $item.id = item.getId()\n            $item.classList.add('item')\n            $item.classList.add('tree-folder')\n            $icon.addEventListener('click', e => {\n                const $el = e.target.parentNode\n                if (!$el) return\n                let node = tree.retrieveNode($item.id)\n                if (!node) return\n                if ($el.nextSibling) {\n                    $el.classList.toggle('is-open')\n                    $el.nextSibling.classList.toggle('is-visible')\n                }\n            })\n            $title.addEventListener('click', e => {\n                const $el = e.target.parentNode\n                if (!$el) return\n                let node = tree.retrieveNode($el.id)\n                if (!node) return\n                if (node.hasChildNodes()) {\n                    Array.prototype.forEach.call($tree.querySelectorAll('.tree-folder.is-active'), element => element.classList.remove('is-active'))\n                    $el.classList.add('is-active')\n                    $mainframeList.innerHTML = ''\n                    $breadcrumb.innerHTML = ''\n                    node.breadcrumb().forEach(item => {\n                        let span = document.createElement('span')\n                        span.textContent = ` / ${item.name}`\n                        $breadcrumb.appendChild(span)\n                    })\n                    node.childNodes().forEach(childnode => {\n                        $mainframeDetails.innerHTML = ''\n                        let el = document.createElement('a')\n                        let icon = document.createElement('i')\n                        let name = document.createElement('span')\n                        icon.classList.add('mainframe-item-icon', 'far')\n                        let iconName = 'fa-folder'\n                        if (childnode.type === 'file') {\n                            iconName = 'fa-file'\n                            for (let i in iconskeymap) {\n                                if (iconskeymap.hasOwnProperty(i) && iconskeymap[i].test(childnode.extension))\n                                    iconName += `-${i}`\n                            }\n                        }\n                        icon.classList.add(iconName)\n                        el.appendChild(icon)\n                        el.id = childnode.getId()\n                        el.classList.add('mainframe-item')\n                        name.textContent = childnode.name\n                        el.appendChild(name)\n                        el.addEventListener('click', e => {\n                            if (childnode.type === 'file') {\n                                let element = e.target.parentNode\n                                let n = tree.retrieveNode(element.id)\n                                $mainframeDetails.innerHTML = `\n                                        <strong>Nom</strong> : ${n.name}<br>\n                                        <strong>Type</strong> : ${n.extension}<br>\n                                        <strong>Date de création</strong> : ${n.creation_date}<br>\n                                        <strong>Date de dernière modification</strong> : ${n.last_modification_date}\n                                    `\n                            }\n                        })\n                        $mainframeList.appendChild(el)\n                    })\n                }\n            })\n\n            if (item.__parentid)\n                $item.dataset.parentid = item.getParentId()\n\n            $item.appendChild($icon)\n            $item.appendChild($title)\n            $list.appendChild($item)\n        }\n        if (item.hasChildNodes())\n            $list.appendChild(buildList(item.childNodes()))\n    })\n    return $list\n}\n\n$tree.appendChild(buildList(tree.data, true))"]}
{"version":3,"sources":["../src/Node.js","../src/Nested.js","js/app.js"],"names":["PRIVATE_PROPERTIES","Node","node","_properties","_mapProperties","key","undefined","defaultValue","value","getProperty","instance","getTree","getPreviousNodes","getPreviousNode","getNextNodes","getNextNode","getParentNode","getSiblingsNodes","getBreadcrumb","reverse","hasChildNodes","children","childNodes","length","index","Boolean","getParentId","getPreviousId","getNextId","properties","property_name","hasOwnProperty","includes","Nested","data","buildTree","currentNode","parentNode","prevNode","nextNode","id","getId","i","setProperty","retrieveNode","reduce","acc","hasProperty","push","concat","retrieveNodesBy","constructor","String","previousNodes","previousNode","nextNodes","breadcrumb","parentid","count","type","name","creation_date","last_modification_date","extension","iconskeymap","tree","$breadcrumb","document","getElementById","$tree","$mainframeList","$mainframeDetails","buildList","root","$list","createElement","classList","add","forEach","item","$item","$icon","$title","textContent","addEventListener","$el","e","target","nextSibling","toggle","Array","prototype","call","querySelectorAll","element","remove","innerHTML","span","appendChild","n","el","icon","iconName","test","childnode","__parentid","dataset"],"mappings":"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","file":"app.8e46537c.map","sourceRoot":"..","sourcesContent":["const PRIVATE_PROPERTIES = ['__nodeid', '__parentid', '__nextid', '__previd', '__tree']\n\nexport default class Node {\n\n    /**\n     * @param {Object} node\n     */\n    constructor(node = {}) {\n        this._properties = this._mapProperties(node)\n    }\n\n    /**\n     * Return node properties\n     * @returns {Object}\n     */\n    get properties() {\n        return this._properties\n    }\n\n    /**\n     * Check if node property exists\n     * @param {String} key\n     * @returns {boolean}\n     */\n    hasProperty(key) {\n        return this._properties[key] !== undefined\n    }\n\n    /**\n     * Returns node property if exists, defaultValue otherwise\n     * @param {String} key\n     * @param {*} defaultValue\n     * @returns {*}\n     */\n    getProperty(key, defaultValue = null) {\n        return this._properties[key] || defaultValue\n    }\n\n    /**\n     * Set node property\n     * @param {String} key\n     * @param {*} value\n     */\n    setProperty(key, value) {\n        this._properties[key] = value\n    }\n\n    /**\n     * Returns node unique id\n     * @returns {String}\n     */\n    getId() {\n        return this.getProperty('__nodeid')\n    }\n\n    /**\n     * Returns node parent unique id\n     * @returns {String|null}\n     */\n    getParentId() {\n        return this.getProperty('__parentid')\n    }\n\n    /**\n     * Returns next node unique id\n     * @returns {String|null}\n     */\n    getNextId() {\n        return this.getProperty('__nextid')\n    }\n\n    /**\n     * Returns previous node unique id\n     * @returns {String|null}\n     */\n    getPreviousId() {\n        return this.getProperty('__previd')\n    }\n\n    /**\n     * Returns an array of child nodes\n     * @returns {Node[]}\n     */\n    childNodes() {\n        return this.getProperty('children', [])\n    }\n\n    /**\n     * Returns an array of previous nodes if exists, null otherwise\n     * @returns {Node[]|null}\n     */\n    previousNodes() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getPreviousNodes(this) : null\n    }\n\n    /**\n     * Returns previous node if exists, null otherwise\n     * @returns {Node|null}\n     */\n    previousNode() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getPreviousNode(this) : null\n    }\n\n    /**\n     * Returns an array of next nodes if exists, null otherwise\n     * @returns {Node[]|null}\n     */\n    nextNodes() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getNextNodes(this) : null\n    }\n\n    /**\n     * Returns next node if exists, null otherwise\n     * @returns {Node|null}\n     */\n    nextNode() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getNextNode(this) : null\n    }\n\n    /**\n     * Returns parent node if exists, null otherwise\n     * @returns {Node|null}\n     */\n    parentNode() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getParentNode(this) : null\n    }\n\n    /**\n     * Returns siblings nodes if exists, null otherwise\n     * @returns {Node[]|null}\n     */\n    siblingsNodes() {\n        let instance = this.getTree()\n        return instance !== null ? instance.getSiblingsNodes(this) : null\n    }\n\n    /**\n     * Returns Nested instance\n     * @returns {Nested|null}\n     */\n    getTree() {\n        return this.getProperty('__tree') || null\n    }\n\n    /**\n     * Returns current node breadcrumb\n     * @returns {Node[]|Array}\n     */\n    breadcrumb() {\n        let instance = this.getTree()\n        if (instance !== null)\n            return instance.getBreadcrumb(this).reverse()\n        return []\n    }\n\n    /**\n     * Returns node first child if exists, null otherwise\n     * @returns {Node|null}\n     */\n    firstChild() {\n        if (!this.hasChildNodes()) return null\n        const children = this.childNodes()\n        return children && children.length ? children[0] : null\n    }\n\n    /**\n     * Returns node last child if exists, null otherwise\n     * @returns {Node|null}\n     */\n    lastChild() {\n        if (!this.hasChildNodes()) return null\n        const children = this.childNodes()\n        return children && children.length ? children[children.length - 1] : null\n    }\n\n    /**\n     * Returns node child by index if exists, null otherwise\n     * @returns {Node|null}\n     */\n    nthChild(index) {\n        if (!this.hasChildNodes()) return null\n        const children = this.childNodes()\n        return children && children.length ? children[index] : null\n    }\n\n    /**\n     * Count node childs\n     * @returns {Number}\n     */\n    countChildren() {\n        if (!this.hasChildNodes()) return 0\n        return this.childNodes().length\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasChildNodes() {\n        const children = this.childNodes()\n        return Boolean(children !== undefined && children !== null && children.length > 0)\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasParentNode() {\n        return Boolean(this.getParentId() !== null)\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasPreviousNode() {\n        return Boolean(this.getPreviousId() !== null)\n    }\n\n    /**\n     * @returns {Boolean}\n     */\n    hasNextNode() {\n        return Boolean(this.getNextId() !== null)\n    }\n\n    /**\n     * Map node properties\n     * @param {Object} properties\n     * @returns {Object}\n     * @private\n     */\n    _mapProperties(properties) {\n        for (let property_name in properties) {\n            if (properties.hasOwnProperty(property_name)) {\n                if (!this[property_name] && !PRIVATE_PROPERTIES.includes(property_name))\n                    this[property_name] = properties[property_name]\n            }\n        }\n        return properties\n    }\n\n}","import Node from '../src/Node'\n\nexport default class Nested {\n\n    /**\n     * @param {Array} data\n     */\n    constructor(data = []) {\n        this.data = this.buildTree(data)\n        this.currentNode = null\n        this.parentNode = null\n        this.prevNode = null\n        this.nextNode = null\n    }\n\n    /**\n     * Retrieve node by id\n     * @param {String} id\n     * @param {Array|null} data\n     * @returns {Node|null}\n     */\n    retrieveNode(id, data = null) {\n        if (this.currentNode !== null && this.currentNode.getId() === id)\n            return this.currentNode\n\n        if (data === null) {\n            data = this.data\n            this.currentNode = null\n            this.prevNode = null\n            this.nextNode = null\n        }\n\n        let node = null\n        for (let i = 0; i < data.length; i++) {\n            node = data[i]\n            if (node.getId() === id) {\n                this.prevNode = data[i - 1] || null\n                this.nextNode = data[i + 1] || null\n                node.setProperty('__previd', this.prevNode !== null ? this.prevNode.getId() : null)\n                node.setProperty('__nextid', this.nextNode !== null ? this.nextNode.getId() : null)\n                break\n            } else if (node.hasChildNodes()) {\n                node = this.retrieveNode(id, node.childNodes())\n            } else node = null\n        }\n        this.currentNode = node\n        return this.currentNode\n    }\n\n    /**\n     * Retrieve nodes by key-value couple\n     * @param {String} key\n     * @param {*|null|undefined} value\n     * @param {Array} data\n     * @returns {Node[]|[]}\n     */\n    retrieveNodesBy(key, value, data = null) {\n        return (data || this.data).reduce((acc, node) => {\n            if (node.hasProperty(key) && node.getProperty(key) === value) acc.push(node)\n            if (node.hasChildNodes())\n                acc = acc.concat(this.retrieveNodesBy(key, value, node.childNodes()))\n            return acc\n        }, [])\n    }\n\n    /**\n     * Retrieve node parent\n     * @param {Node|String} node\n     * @returns {Node|null}\n     */\n    getParentNode(node) {\n        const id = node.constructor === Node ? node.getParentId() : node\n        return this.retrieveNode(id)\n    }\n\n    /**\n     * Retrieve node siblings\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getSiblingsNodes(node) {\n        return [].concat(this.getPreviousNodes(node), this.getNextNodes(node))\n    }\n\n    /**\n     * Retrieve previous nodes by id\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getPreviousNodes(node) {\n        if (node.constructor === String) node = this.retrieveNode(node)\n        let previousNodes = []\n        if (node.getPreviousId() !== null) {\n            previousNodes.push(node.previousNode())\n            previousNodes = previousNodes.concat(this.getPreviousNodes(node.getPreviousId()))\n        }\n        return previousNodes\n    }\n\n    /**\n     * Retrieve previous node\n     * @param {Node|String} node\n     * @returns {Node}\n     */\n    getPreviousNode(node) {\n        const id = node.constructor === Node ? node.getId() : node\n        this.retrieveNode(id)\n        return this.prevNode\n    }\n\n    /**\n     * Retrieve node next nodes\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getNextNodes(node) {\n        if (node.constructor === String) node = this.retrieveNode(node)\n        let nextNodes = []\n        if (node.getNextId() !== null) {\n            nextNodes.push(node.nextNode())\n            nextNodes = nextNodes.concat(this.getNextNodes(node.getNextId()))\n        }\n        return nextNodes\n    }\n\n    /**\n     * Retrieve next node\n     * @param {Node|String} node\n     * @returns {Node}\n     */\n    getNextNode(node) {\n        const id = node.constructor === Node ? node.getId() : node\n        this.retrieveNode(id)\n        return this.nextNode\n    }\n\n    /**\n     * Retrieve node breadcrumb\n     * @param {Node|String} node\n     * @returns {Array}\n     */\n    getBreadcrumb(node) {\n        if (node.constructor === String) node = this.retrieveNode(node)\n        let breadcrumb = []\n        breadcrumb.push(node)\n        if (node.getParentId() !== null)\n            breadcrumb = breadcrumb.concat(this.getBreadcrumb(node.getParentId()))\n        return breadcrumb\n    }\n\n    /**\n     * @param {Array} data\n     * @param {String|null} parentid\n     * @returns {Node[]}\n     */\n    buildTree(data = [], parentid = null) {\n        if (!this.count) this.count = 0\n        return data.reduce((acc, node) => {\n            this.count += 1\n            if (node.constructor !== Node)\n                node = new Node(node)\n            node.setProperty('__nodeid', `node-${this.count}`)\n            node.setProperty('__parentid', parentid)\n            node.setProperty('__tree', this)\n            if (node.hasChildNodes())\n                node.setProperty('children', this.buildTree(node.childNodes(), node.getId()))\n            acc.push(node)\n            return acc\n        }, [])\n    }\n\n}","import Nested from '../../src/Nested'\n\nconst data = [\n    {\n        type: 'folder',\n        name: 'Ma musique',\n        creation_date: '2018-05-04 14:53:26',\n        last_modification_date: '2018-05-04 14:53:26',\n        children: [\n            {\n                type: 'file',\n                name: 'my song.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:12',\n                last_modification_date: '2018-05-04 14:55:12',\n            }, {\n                type: 'file',\n                name: 'my song_2.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:16',\n                last_modification_date: '2018-05-04 14:55:16',\n            }, {\n                type: 'file',\n                name: 'my song_3.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:24',\n                last_modification_date: '2018-05-04 14:55:24',\n            }, {\n                type: 'file',\n                name: 'my song_4.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:58',\n                last_modification_date: '2018-05-04 14:55:58',\n            }, {\n                type: 'folder',\n                name: 'favourites',\n                creation_date: '2018-05-04 14:57:01',\n                last_modification_date: '2018-05-04 14:57:01',\n                children: [\n                    {\n                        type: 'file',\n                        name: 'my favourite song.mp3',\n                        extension: 'mp3',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }, {\n                        type: 'file',\n                        name: 'my favourite song_2.mp3',\n                        extension: 'mp3',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }\n                ]\n            }\n        ]\n    }, {\n        type: 'folder',\n        name: 'Mes vidéos',\n        creation_date: '2018-05-04 14:53:26',\n        last_modification_date: '2018-05-04 14:53:26',\n        children: [\n            {\n                type: 'file',\n                name: 'my video.mp4',\n                extension: 'mp4',\n                creation_date: '2018-05-04 14:55:12',\n                last_modification_date: '2018-05-04 14:55:12',\n            }, {\n                type: 'folder',\n                name: 'favourites',\n                creation_date: '2018-05-04 14:57:01',\n                last_modification_date: '2018-05-04 14:57:01',\n                children: [\n                    {\n                        type: 'file',\n                        name: 'my favourite video.mp4',\n                        extension: 'mp4',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nconst iconskeymap = {\n    'video': /\\.?(mp4|webm|ogg)/i,\n    'pdf': /\\.?(pdf)/i,\n    'image': /\\.?(jpe?g|png|tiff|svg|bmp)/i,\n    'code': /\\.?(jsx?|php|css|html|scss|less|rb|py|c|cs|sh)/i,\n    'audio': /\\.?(mp3|wav|ogg)/i,\n    'archive': /\\.?(zip|rar|7z|tar(\\.gz)?)/i\n\n}\n\nconst tree = new Nested(data)\n\nlet $breadcrumb = document.getElementById('breadcrumb')\nlet $tree = document.getElementById('tree')\nlet $mainframeList = document.getElementById('mainframe-list')\nlet $mainframeDetails = document.getElementById('mainframe-details')\n\nlet buildList = (data, root = false) => {\n    let $list = document.createElement('ul')\n    $list.classList.add('list')\n    if (root) $list.classList.add('tree-root')\n    data.forEach(item => {\n        if (item.type === 'folder') {\n            let $item = document.createElement('li')\n            let $icon = document.createElement('span')\n            let $title = document.createElement('a')\n            $icon.classList.add('tree-icon')\n            $title.textContent = item.name\n            $item.id = item.getId()\n            $item.classList.add('item')\n            $item.classList.add('tree-folder')\n            $icon.addEventListener('click', e => {\n                const $el = e.target.parentNode\n                if (!$el) return\n                let node = tree.retrieveNode($item.id)\n                if (!node) return\n                if ($el.nextSibling) {\n                    $el.classList.toggle('is-open')\n                    $el.nextSibling.classList.toggle('is-visible')\n                }\n            })\n            $title.addEventListener('click', e => {\n                const $el = e.target.parentNode\n                if (!$el) return\n                let node = tree.retrieveNode($el.id)\n                if (!node) return\n                if (node.hasChildNodes()) {\n                    Array.prototype.forEach.call($tree.querySelectorAll('.tree-folder.is-active'), element => element.classList.remove('is-active'))\n                    $el.classList.add('is-active')\n                    $mainframeList.innerHTML = ''\n                    $breadcrumb.innerHTML = ''\n                    node.breadcrumb().forEach(item => {\n                        let span = document.createElement('span')\n                        span.textContent = ` / ${item.name}`\n                        $breadcrumb.appendChild(span)\n                    })\n                    node.childNodes().forEach(n => {\n                        $mainframeDetails.innerHTML = ''\n                        if (n.type === 'folder') return\n                        let el = document.createElement('a')\n                        let icon = document.createElement('i')\n                        let name = document.createElement('span')\n                        icon.classList.add('mainframe-item-icon', 'far')\n                        for (let i in iconskeymap) {\n                            let iconName = 'fa-file'\n                            if (iconskeymap.hasOwnProperty(i) && iconskeymap[i].test(n.extension))\n                                iconName += `-${i}`\n                            icon.classList.add(iconName)\n                        }\n                        el.appendChild(icon)\n                        el.id = n.getId()\n                        el.classList.add('mainframe-item')\n                        name.textContent = n.name\n                        el.appendChild(name)\n                        el.addEventListener('click', e => {\n                            let element = e.target.parentNode\n                            let childnode = tree.retrieveNode(element.id)\n                            $mainframeDetails.innerHTML = `\n                                    <strong>Nom</strong> : ${childnode.name}<br>\n                                    <strong>Type</strong> : ${childnode.extension}<br>\n                                    <strong>Date de création</strong> : ${childnode.creation_date}<br>\n                                    <strong>Date de dernière modification</strong> : ${childnode.last_modification_date}\n                                `\n                        })\n                        $mainframeList.appendChild(el)\n                    })\n                }\n            })\n\n            if (item.__parentid)\n                $item.dataset.parentid = item.getParentId()\n\n            $item.appendChild($icon)\n            $item.appendChild($title)\n            $list.appendChild($item)\n        }\n        if (item.hasChildNodes())\n            $list.appendChild(buildList(item.childNodes()))\n    })\n    return $list\n}\n\n$tree.appendChild(buildList(tree.data, true))"]}
{"version":3,"sources":["../src/config.js","../src/utils.js","../src/Node.js","../src/Nested.js","js/app.js"],"names":["config","properties","node_id","node_id_prefix","parent_id","root_id","prev_id","next_id","module","exports","utils","isBrowser","window","undefined","document","e","isNode","retrieveContext","_context","global","getContext","context_id","__nestedjs","setContext","context","Error","uniqueid","Math","floor","randomNum","Date","clearContext","start","length","random","require","PRIVATE_PROPERTIES","Node","node","tree_uniqueid","_properties","_mapProperties","_tree_uniqueid","key","defaultValue","value","getProperty","getTree","options","children_key","instance","getPreviousNodes","getPreviousNode","getNextNodes","getNextNode","getParentNode","getRootNode","getSiblingsNodes","getBreadcrumb","reverse","hasChildNodes","children","childNodes","index","Boolean","getParentId","getPreviousId","getNextId","getRootId","property_name","hasOwnProperty","includes","DEFAULT_OPTIONS","Nested","data","Object","assign","_uniqueid","buildTree","currentNode","_count","id","_retrieveNode","_retrieveNodesBy","depth","_retrieveNodesByDepth","constructor","retrieveNode","concat","String","previousNodes","push","previousNode","nextNodes","nextNode","breadcrumb","parentid","rootid","tree","reduce","acc","setProperty","_setUniqueId","getId","i","hasPreviousNode","hasNextNode","nodes","hasProperty","currentDepth","hasParentNode","type","name","creation_date","last_modification_date","extension","iconskeymap","$breadcrumb","getElementById","$tree","$mainframeList","$mainframeDetails","buildList","root","$list","createElement","classList","add","forEach","item","$item","$icon","$title","textContent","addEventListener","$el","target","parentNode","nextSibling","toggle","Array","prototype","call","querySelectorAll","element","remove","innerHTML","span","appendChild","el","icon","iconName","childnode","test","n","__parentid","dataset"],"mappings":"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","file":"app.8e46537c.map","sourceRoot":"..","sourcesContent":["let config = {\r\n    properties: {\r\n        node_id: '__nodeid',\r\n        node_id_prefix: 'node-',\r\n        parent_id: '__parentid',\r\n        root_id: '__rootid',\r\n        prev_id: '__previd',\r\n        next_id: '__nextid'\r\n    }\r\n}\r\n\r\nmodule.exports = config","let utils = {\n\n    isBrowser() {\n        try {\n            return window !== undefined && window.document !== undefined\n        } catch(e) {\n            return false\n        }\n    },\n\n    isNode() {\n        try {\n            return module !== undefined && module.exports !== undefined\n        } catch(e) {\n            return false\n        }\n    },\n\n    retrieveContext() {\n        let _context = null\n        if (utils.isBrowser()) _context = window\n        else if (utils.isNode()) _context = global\n        return _context\n    },\n\n    getContext(context_id) {\n        if (utils.isBrowser() && window.__nestedjs)\n            return window.__nestedjs[context_id] || null\n        if (utils.isNode() && global.__nestedjs)\n            return global.__nestedjs[context_id] || null\n        return null\n    },\n\n    setContext(context) {\n        let _context = utils.retrieveContext()\n        if (_context === null || _context === undefined) throw new Error('NestedJS.setContext - no context found')\n        if (!_context.__nestedjs) _context.__nestedjs = {}\n        let uniqueid = Math.floor(utils.randomNum() * (+new Date / 1000))\n        _context.__nestedjs[uniqueid] = context\n        return uniqueid\n    },\n\n    clearContext() {\n        let _context = utils.retrieveContext()\n        if (_context === null || _context === undefined) throw new Error('NestedJS.clearContext - no context found')\n        _context.__nestedjs = {}\n    },\n\n    randomNum(start = 1, length = 10000) {\n        return Math.floor((Math.random() * length) + start)\n    }\n\n}\n\nmodule.exports = utils","const {properties} = require('./config')\r\nconst {getContext} = require('./utils')\r\nconst PRIVATE_PROPERTIES = [properties.node_id, properties.parent_id, properties.next_id, properties.prev_id]\r\n\r\nclass Node {\r\n\r\n    /**\r\n     * @param {Object} node\r\n     * @param {Nested|null} tree_uniqueid\r\n     */\r\n    constructor(node = {}, tree_uniqueid = null) {\r\n        this._properties = this._mapProperties(node)\r\n        this._tree_uniqueid = tree_uniqueid\r\n    }\r\n\r\n    /**\r\n     * Return node properties\r\n     * @returns {Object}\r\n     */\r\n    get properties() {\r\n        return this._properties\r\n    }\r\n\r\n    /**\r\n     * Check if node property exists\r\n     * @param {String} key\r\n     * @returns {boolean}\r\n     */\r\n    hasProperty(key) {\r\n        return this._properties[key] !== undefined\r\n    }\r\n\r\n    /**\r\n     * Returns node property if exists, defaultValue otherwise\r\n     * @param {String} key\r\n     * @param {*} defaultValue\r\n     * @returns {*}\r\n     */\r\n    getProperty(key, defaultValue = null) {\r\n        return this._properties[key] || defaultValue\r\n    }\r\n\r\n    /**\r\n     * Set node property\r\n     * @param {String} key\r\n     * @param {*} value\r\n     */\r\n    setProperty(key, value) {\r\n        this._properties[key] = value\r\n    }\r\n\r\n    /**\r\n     * Returns node unique id\r\n     * @returns {String}\r\n     */\r\n    getId() {\r\n        return this.getProperty(properties.node_id)\r\n    }\r\n\r\n    /**\r\n     * Returns node parent unique id\r\n     * @returns {String|null}\r\n     */\r\n    getParentId() {\r\n        return this.getProperty(properties.parent_id)\r\n    }\r\n\r\n    /**\r\n     * Returns previous node unique id\r\n     * @returns {String|null}\r\n     */\r\n    getPreviousId() {\r\n        return this.getProperty(properties.prev_id)\r\n    }\r\n\r\n    /**\r\n     * Returns next node unique id\r\n     * @returns {String|null}\r\n     */\r\n    getNextId() {\r\n        return this.getProperty(properties.next_id)\r\n    }\r\n\r\n    /**\r\n     * Returns root node unique id\r\n     * @returns {String|null}\r\n     */\r\n    getRootId() {\r\n        return this.getProperty(properties.root_id)\r\n    }\r\n\r\n    /**\r\n     * Returns an array of child nodes\r\n     * @returns {Node[]}\r\n     */\r\n    childNodes() {\r\n        return this.getProperty(this.getTree().options.children_key, [])\r\n    }\r\n\r\n    /**\r\n     * Returns an array of previous nodes if exists, null otherwise\r\n     * @returns {Node[]|null}\r\n     */\r\n    previousNodes() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getPreviousNodes(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns previous node if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    previousNode() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getPreviousNode(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns an array of next nodes if exists, null otherwise\r\n     * @returns {Node[]|null}\r\n     */\r\n    nextNodes() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getNextNodes(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns next node if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    nextNode() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getNextNode(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns parent node if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    parentNode() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getParentNode(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns parent node if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    rootNode() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getRootNode(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns an array of siblings nodes if exists, null otherwise\r\n     * @returns {Node[]|null}\r\n     */\r\n    siblingsNodes() {\r\n        let instance = this.getTree()\r\n        return instance !== null ? instance.getSiblingsNodes(this) : null\r\n    }\r\n\r\n    /**\r\n     * Returns Nested instance\r\n     * @returns {Nested|null}\r\n     */\r\n    getTree() {\r\n        return getContext(this._tree_uniqueid)\r\n    }\r\n\r\n    /**\r\n     * Returns current node breadcrumb\r\n     * @returns {Node[]|Array}\r\n     */\r\n    breadcrumb() {\r\n        let instance = this.getTree()\r\n        if (instance !== null)\r\n            return instance.getBreadcrumb(this).reverse()\r\n        return []\r\n    }\r\n\r\n    /**\r\n     * Returns node first child if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    firstChild() {\r\n        if (!this.hasChildNodes()) return null\r\n        const children = this.childNodes()\r\n        return children && children.length ? children[0] : null\r\n    }\r\n\r\n    /**\r\n     * Returns node last child if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    lastChild() {\r\n        if (!this.hasChildNodes()) return null\r\n        const children = this.childNodes()\r\n        return children && children.length ? children[children.length - 1] : null\r\n    }\r\n\r\n    /**\r\n     * Returns node child by index if exists, null otherwise\r\n     * @returns {Node|null}\r\n     */\r\n    nthChild(index) {\r\n        if (!this.hasChildNodes()) return null\r\n        const children = this.childNodes()\r\n        return children && children.length ? children[index] : null\r\n    }\r\n\r\n    /**\r\n     * Count node childs\r\n     * @returns {Number}\r\n     */\r\n    countChildren() {\r\n        if (!this.hasChildNodes()) return 0\r\n        return this.childNodes().length\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean}\r\n     */\r\n    hasChildNodes() {\r\n        const children = this.childNodes()\r\n        return Boolean(children !== undefined && children !== null && children.length > 0)\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean}\r\n     */\r\n    hasParentNode() {\r\n        return Boolean(this.getParentId() !== null)\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean}\r\n     */\r\n    hasPreviousNode() {\r\n        return Boolean(this.getPreviousId() !== null)\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean}\r\n     */\r\n    hasNextNode() {\r\n        return Boolean(this.getNextId() !== null)\r\n    }\r\n\r\n    /**\r\n     * @returns {Boolean}\r\n     */\r\n    hasRootNode() {\r\n        return Boolean(this.getRootId() !== null)\r\n    }\r\n\r\n    /**\r\n     * Map node properties\r\n     * @param {Object} properties\r\n     * @returns {Object}\r\n     * @private\r\n     */\r\n    _mapProperties(properties) {\r\n        for (let property_name in properties) {\r\n            if (properties.hasOwnProperty(property_name)) {\r\n                if (!this[property_name] && !PRIVATE_PROPERTIES.includes(property_name))\r\n                    this[property_name] = properties[property_name]\r\n            }\r\n        }\r\n        return properties\r\n    }\r\n\r\n}\r\n\r\nmodule.exports = Node","const Node = require('./Node')\r\nconst {properties} = require('./config')\r\nconst {getContext, setContext, randomNum} = require('./utils')\r\nconst DEFAULT_OPTIONS = {\r\n    children_key: 'children'\r\n}\r\n\r\nclass Nested {\r\n\r\n    /**\r\n     * @param {Array} data\r\n     * @param {Object} options\r\n     */\r\n    constructor(data = [], options = {}) {\r\n        this.options = Object.assign({}, DEFAULT_OPTIONS, options)\r\n        this._uniqueid = setContext(this)\r\n        this.data = this.buildTree(data)\r\n        this.currentNode = null\r\n        return getContext(this._uniqueid)\r\n    }\r\n\r\n    /**\r\n     * Returns tree instance unique id\r\n     * @returns {String}\r\n     */\r\n    getUniqueId() {\r\n        return this._uniqueid\r\n    }\r\n\r\n    /**\r\n     * Return entire tree size (with children)\r\n     * @returns {number}\r\n     */\r\n    getTreeSize() {\r\n        return this._count || 0\r\n    }\r\n\r\n    /**\r\n     * Retrieve node by id\r\n     * @param {String} id\r\n     * @returns {Node|null}\r\n     */\r\n    retrieveNode(id) {\r\n        return this._retrieveNode(id, this.data)\r\n    }\r\n\r\n    /**\r\n     * Retrieve nodes by key-value couple\r\n     * @param {String} key\r\n     * @param {*|null|undefined} value\r\n     * @returns {Node[]|[]}\r\n     */\r\n    retrieveNodesBy(key, value) {\r\n        if (!key) return null\r\n        return this._retrieveNodesBy(key, value, this.data)\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param depth\r\n     * @returns {*}\r\n     */\r\n    retrieveNodesByDepth(depth = 0) {\r\n        return this._retrieveNodesByDepth(depth, this.data)\r\n    }\r\n\r\n    /**\r\n     * Retrieve node parent\r\n     * @param {Node|String} node\r\n     * @returns {Node|null}\r\n     */\r\n    getParentNode(node) {\r\n        const id = node.constructor === Node ? node.getParentId() : node\r\n        return this.retrieveNode(id)\r\n    }\r\n\r\n    /**\r\n     * Retrieve node siblings\r\n     * @param {Node|String} node\r\n     * @returns {Array}\r\n     */\r\n    getSiblingsNodes(node) {\r\n        return [].concat(this.getPreviousNodes(node), this.getNextNodes(node))\r\n    }\r\n\r\n    /**\r\n     * Retrieve previous nodes by id\r\n     * @param {Node|String} node\r\n     * @returns {Array}\r\n     */\r\n    getPreviousNodes(node) {\r\n        if (node.constructor === String) node = this.retrieveNode(node)\r\n        let previousNodes = []\r\n        if (node !== null && node.getPreviousId() !== null) {\r\n            previousNodes.push(node.previousNode())\r\n            previousNodes = previousNodes.concat(this.getPreviousNodes(node.getPreviousId()))\r\n        }\r\n        return previousNodes\r\n    }\r\n\r\n    /**\r\n     * Retrieve previous node\r\n     * @param {Node|String} node\r\n     * @returns {Node}\r\n     */\r\n    getPreviousNode(node) {\r\n        const id = node.constructor === Node ? node.getPreviousId() : node\r\n        return id !== null ? this.retrieveNode(id) : null\r\n    }\r\n\r\n    /**\r\n     * Retrieve node next nodes\r\n     * @param {Node|String} node\r\n     * @returns {Array}\r\n     */\r\n    getNextNodes(node) {\r\n        if (node.constructor === String) node = this.retrieveNode(node)\r\n        let nextNodes = []\r\n        if (node !== null && node.getNextId() !== null) {\r\n            nextNodes.push(node.nextNode())\r\n            nextNodes = nextNodes.concat(this.getNextNodes(node.getNextId()))\r\n        }\r\n        return nextNodes\r\n    }\r\n\r\n    /**\r\n     * Retrieve node next node\r\n     * @param {Node|String} node\r\n     * @returns {Node}\r\n     */\r\n    getNextNode(node) {\r\n        const id = node.constructor === Node ? node.getNextId() : node\r\n        return id !== null ? this.retrieveNode(id) : null\r\n    }\r\n\r\n    /**\r\n     * Retrieve node root node\r\n     * @param {Node|String} node\r\n     * @returns {Node}\r\n     */\r\n    getRootNode(node) {\r\n        const id = node.constructor === Node ? node.getRootId() : node\r\n        return id !== null ? this.retrieveNode(id) : null\r\n    }\r\n\r\n    /**\r\n     * Retrieve node breadcrumb\r\n     * @param {Node|String} node\r\n     * @returns {Array}\r\n     */\r\n    getBreadcrumb(node) {\r\n        if (node.constructor === String) node = this.retrieveNode(node)\r\n        let breadcrumb = []\r\n        breadcrumb.push(node)\r\n        if (node.getParentId() !== null)\r\n            breadcrumb = breadcrumb.concat(this.getBreadcrumb(node.getParentId()))\r\n        return breadcrumb\r\n    }\r\n\r\n    /**\r\n     * @param {Array} data\r\n     * @param {String|null} parentid\r\n     * @param {String|null} rootid\r\n     * @returns {Node[]}\r\n     */\r\n    buildTree(data = [], parentid = null, rootid = null) {\r\n        let tree = data.reduce((acc, node) => {\r\n            if (node.constructor !== Node)\r\n                node = new Node(node, this._uniqueid)\r\n            node.setProperty(properties.node_id, this._setUniqueId())\r\n            node.setProperty(properties.parent_id, parentid)\r\n            if (parentid === null) {\r\n                rootid = node.getId()\r\n                node.setProperty(properties.root_id, null)\r\n            } else node.setProperty(properties.root_id, rootid)\r\n            if (node.hasChildNodes())\r\n                node.setProperty(this.options.children_key, this.buildTree(node.childNodes(), node.getId(), rootid))\r\n            acc.push(node)\r\n            return acc\r\n        }, [])\r\n        for (let i = 0; i < tree.length; i++) {\r\n            let hasPreviousNode = tree[i - 1] !== undefined && tree[i - 1].constructor === Node\r\n            let hasNextNode = tree[i + 1] !== undefined && tree[i + 1].constructor === Node\r\n            tree[i].setProperty(properties.prev_id, hasPreviousNode ? tree[i - 1].getId() : null)\r\n            tree[i].setProperty(properties.next_id, hasNextNode ? tree[i + 1].getId() : null)\r\n        }\r\n        return tree\r\n    }\r\n\r\n    /**\r\n     * Retrieve node by id\r\n     * @param {String} id\r\n     * @param {Array|null} data\r\n     * @private\r\n     * @returns {Node|null}\r\n     */\r\n    _retrieveNode(id, data) {\r\n        if (id === undefined || id === null) return null\r\n        if (this.currentNode !== null && this.currentNode.getId() === id)\r\n            return this.currentNode\r\n\r\n        let node = null\r\n        for (let i = 0; i < data.length; i++) {\r\n            node = data[i]\r\n            if (node.getId() === id) {\r\n                this.currentNode = node\r\n                break\r\n            }\r\n            else if (node.hasChildNodes()) {\r\n                node = this._retrieveNode(id, node.childNodes())\r\n            } else node = null\r\n        }\r\n        return this.currentNode\r\n    }\r\n\r\n\r\n    /**\r\n     * Retrieve nodes by key-value couple\r\n     * @param {String} key\r\n     * @param {*|null|undefined} value\r\n     * @param {Array} data\r\n     * @private\r\n     * @returns {Node[]|[]}\r\n     */\r\n    _retrieveNodesBy(key, value, data) {\r\n        let nodes = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            let node = data[i]\r\n            if (node.hasProperty(key) && node.getProperty(key) === value) nodes.push(node)\r\n            if (node.hasChildNodes())\r\n                nodes = nodes.concat(this._retrieveNodesBy(key, value, node.childNodes()))\r\n        }\r\n        return nodes\r\n    }\r\n\r\n    /**\r\n     * Retrieve nodes by depth\r\n     * @param {Number} depth\r\n     * @param {Array} data\r\n     * @param {Number} currentDepth\r\n     * @private\r\n     * @returns {Node[]|[]}\r\n     */\r\n    _retrieveNodesByDepth(depth = 0, data = null, currentDepth = 0) {\r\n        let nodes = []\r\n        for (let i = 0; i < data.length; i++) {\r\n            let node = data[i]\r\n            if (!node.hasParentNode()) currentDepth = 0\r\n            if (depth === currentDepth) nodes.push(node)\r\n            else if (node.hasChildNodes()) nodes = nodes.concat(this._retrieveNodesByDepth(depth, node.childNodes(), currentDepth += 1))\r\n        }\r\n        return nodes\r\n    }\r\n\r\n    /**\r\n     * @returns {string}\r\n     * @private\r\n     */\r\n    _setUniqueId() {\r\n        if (!this._count) this._count = 0\r\n        this._count += 1\r\n        return `${properties.node_id_prefix}${this._count * randomNum()}`\r\n    }\r\n}\r\n\r\nmodule.exports = Nested","import Nested from '../../src/Nested'\n\nconst data = [\n    {\n        type: 'folder',\n        name: 'Ma musique',\n        creation_date: '2018-05-04 14:53:26',\n        last_modification_date: '2018-05-04 14:53:26',\n        children: [\n            {\n                type: 'file',\n                name: 'my song.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:12',\n                last_modification_date: '2018-05-04 14:55:12',\n            }, {\n                type: 'file',\n                name: 'my song_2.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:16',\n                last_modification_date: '2018-05-04 14:55:16',\n            }, {\n                type: 'file',\n                name: 'my song_3.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:24',\n                last_modification_date: '2018-05-04 14:55:24',\n            }, {\n                type: 'file',\n                name: 'my song_4.mp3',\n                extension: 'mp3',\n                creation_date: '2018-05-04 14:55:58',\n                last_modification_date: '2018-05-04 14:55:58',\n            }, {\n                type: 'folder',\n                name: 'favourites',\n                creation_date: '2018-05-04 14:57:01',\n                last_modification_date: '2018-05-04 14:57:01',\n                children: [\n                    {\n                        type: 'file',\n                        name: 'my favourite song.mp3',\n                        extension: 'mp3',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }, {\n                        type: 'file',\n                        name: 'my favourite song_2.mp3',\n                        extension: 'mp3',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }\n                ]\n            }\n        ]\n    }, {\n        type: 'folder',\n        name: 'Mes vidéos',\n        creation_date: '2018-05-04 14:53:26',\n        last_modification_date: '2018-05-04 14:53:26',\n        children: [\n            {\n                type: 'file',\n                name: 'my video.mp4',\n                extension: 'mp4',\n                creation_date: '2018-05-04 14:55:12',\n                last_modification_date: '2018-05-04 14:55:12',\n            }, {\n                type: 'folder',\n                name: 'favourites',\n                creation_date: '2018-05-04 14:57:01',\n                last_modification_date: '2018-05-04 14:57:01',\n                children: [\n                    {\n                        type: 'file',\n                        name: 'my favourite video.mp4',\n                        extension: 'mp4',\n                        creation_date: '2018-05-04 14:58:54',\n                        last_modification_date: '2018-05-04 14:58:54',\n                    }\n                ]\n            }\n        ]\n    }\n]\n\nconst iconskeymap = {\n    'video': /\\.?(mp4|webm|ogg)/i,\n    'pdf': /\\.?(pdf)/i,\n    'image': /\\.?(jpe?g|png|tiff|svg|bmp)/i,\n    'code': /\\.?(jsx?|php|css|html|scss|less|rb|py|c|cs|sh)/i,\n    'audio': /\\.?(mp3|wav|ogg)/i,\n    'archive': /\\.?(zip|rar|7z|tar(\\.gz)?)/i\n\n}\n\nconst tree = new Nested(data)\n\nlet $breadcrumb = document.getElementById('breadcrumb')\nlet $tree = document.getElementById('tree')\nlet $mainframeList = document.getElementById('mainframe-list')\nlet $mainframeDetails = document.getElementById('mainframe-details')\n\nlet buildList = (data, root = false) => {\n    let $list = document.createElement('ul')\n    $list.classList.add('list')\n    if (root) $list.classList.add('tree-root')\n    data.forEach(item => {\n        if (item.type === 'folder') {\n            let $item = document.createElement('li')\n            let $icon = document.createElement('span')\n            let $title = document.createElement('a')\n            $icon.classList.add('tree-icon')\n            $title.textContent = item.name\n            $item.id = item.getId()\n            $item.classList.add('item')\n            $item.classList.add('tree-folder')\n            $icon.addEventListener('click', e => {\n                const $el = e.target.parentNode\n                if (!$el) return\n                let node = tree.retrieveNode($item.id)\n                if (!node) return\n                if ($el.nextSibling) {\n                    $el.classList.toggle('is-open')\n                    $el.nextSibling.classList.toggle('is-visible')\n                }\n            })\n            $title.addEventListener('click', e => {\n                const $el = e.target.parentNode\n                if (!$el) return\n                let node = tree.retrieveNode($el.id)\n                if (!node) return\n                if (node.hasChildNodes()) {\n                    Array.prototype.forEach.call($tree.querySelectorAll('.tree-folder.is-active'), element => element.classList.remove('is-active'))\n                    $el.classList.add('is-active')\n                    $mainframeList.innerHTML = ''\n                    $breadcrumb.innerHTML = ''\n                    node.breadcrumb().forEach(item => {\n                        let span = document.createElement('span')\n                        span.textContent = ` / ${item.name}`\n                        $breadcrumb.appendChild(span)\n                    })\n                    node.childNodes().forEach(childnode => {\n                        $mainframeDetails.innerHTML = ''\n                        let el = document.createElement('a')\n                        let icon = document.createElement('i')\n                        let name = document.createElement('span')\n                        icon.classList.add('mainframe-item-icon', 'far')\n                        let iconName = 'fa-folder'\n                        if (childnode.type === 'file') {\n                            iconName = 'fa-file'\n                            for (let i in iconskeymap) {\n                                if (iconskeymap.hasOwnProperty(i) && iconskeymap[i].test(childnode.extension))\n                                    iconName += `-${i}`\n                            }\n                        }\n                        icon.classList.add(iconName)\n                        el.appendChild(icon)\n                        el.id = childnode.getId()\n                        el.classList.add('mainframe-item')\n                        name.textContent = childnode.name\n                        el.appendChild(name)\n                        el.addEventListener('click', e => {\n                            if (childnode.type === 'file') {\n                                let element = e.target.parentNode\n                                let n = tree.retrieveNode(element.id)\n                                $mainframeDetails.innerHTML = `\n                                        <strong>Nom</strong> : ${n.name}<br>\n                                        <strong>Type</strong> : ${n.extension}<br>\n                                        <strong>Date de création</strong> : ${n.creation_date}<br>\n                                        <strong>Date de dernière modification</strong> : ${n.last_modification_date}\n                                    `\n                            }\n                        })\n                        $mainframeList.appendChild(el)\n                    })\n                }\n            })\n\n            if (item.__parentid)\n                $item.dataset.parentid = item.getParentId()\n\n            $item.appendChild($icon)\n            $item.appendChild($title)\n            $list.appendChild($item)\n        }\n        if (item.hasChildNodes())\n            $list.appendChild(buildList(item.childNodes()))\n    })\n    return $list\n}\n\n$tree.appendChild(buildList(tree.data, true))"]}